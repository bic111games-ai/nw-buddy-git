<ActionList>
	<Actions>
		<Action Name="Reaction" FragmentName="r_R2_F" ServerStarted="true">
			<ActivationCondition>
				<And>
					<IfDamaged RequireDamageWasBlocked="false" RequireDamageDepletedStamina="false" RequireDeflectDamage="false" FailOnNoReactionDamage="true" IgnoreDeflectDamage="true" RequireHitVolumeName=""/>
					<IfDamagedByPowerLevel Comparison="GreaterThan" Value="0"/>
					<Not>
						<IfDamaged RequireDamageWasBlocked="true" RequireDamageDepletedStamina="true" RequireDeflectDamage="false" FailOnNoReactionDamage="false" IgnoreDeflectDamage="false" RequireHitVolumeName=""/>
					</Not>
					<Not>
						<And>
							<IfGritValue RequireGritActive="true" ComparisonValue="0" ComparisonValueIsPercentage="false" ComparisonType="GreaterThan"/>
							<Not>
								<IsStunned/>
							</Not>
						</And>
					</Not>
					<Not>
						<IfMannequinTag TagName="Elite"/>
					</Not>
					<Not>
						<IfMannequinTag TagName="Empowered"/>
					</Not>
					<Not>
						<IfMannequinTag TagName="Axe"/>
					</Not>
					<Not>
						<IfDead ServerOnly="true"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" ExitOffsetSeconds="0.1"/>
			</DeactivationCondition>
			<Activities>
				<SetReactionFragment>
					<Default ReactionTablePath="SharedAssets/springboardentitites/Characters/Damned/CAGE/DamnedReactionTableHarness.actionlist" IsFullBody="true" UnsetReactionOffset="0.3"/>
					<Conditional Name="Elite" ReactionTablePath="SharedAssets/springboardentitites/Characters/Damned/CAGE/DamnedEliteReactionTableHarness.actionlist" IsFullBody="true" UnsetReactionOffset="0.2"/>
				</SetReactionFragment>
				<ReactionMotion>
					<Default Scale="0.0" PushBackScale="0.0"/>
					<Conditional Name="PromotedElite" Scale="1.0" PushBackScale="0.15"/>
				</ReactionMotion>
				<ClearDamaged/>
				<SetMannequinTag ResetWhenReinstalled="false">
					<Default TagName="Reaction" OnEnter="Set" OnExit="Unset" DelayTimer="0.0"/>
				</SetMannequinTag>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="X" OnEnter="NoEffect" OnExit="NoEffect" DelayTimer="0.0"/>
					<Conditional Name="R2_StunBreakout" TagName="BreakoutWindow" OnEnter="Set" OnExit="Unset" DelayTimer="0.4"/>
					<Conditional Name="R4_StunBreakout" TagName="BreakoutWindow" OnEnter="Set" OnExit="Unset" DelayTimer="1.0"/>
					<Conditional Name="StunBreakout" TagName="BreakoutWindow" OnEnter="Set" OnExit="Unset" DelayTimer="0.6"/>
					<Conditional Name="R2_ReactionBreakout" TagName="BreakoutWindow" OnEnter="Set" OnExit="Unset" DelayTimer="0.1"/>
					<Conditional Name="R4_ReactionBreakout" TagName="BreakoutWindow" OnEnter="Set" OnExit="Unset" DelayTimer="1.0"/>
					<Conditional Name="ReactionBreakout" TagName="BreakoutWindow" OnEnter="Set" OnExit="Unset" DelayTimer="0.4"/>
				</SetMannequinTag>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<IsStunned/>
					</IfCondition>
					<ThenActivity>
						<SetMannequinTag ResetWhenReinstalled="true">
							<Default TagName="Stunned" OnEnter="Set" OnExit="Unset" DelayTimer="0.0"/>
						</SetMannequinTag>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="false">
					<IfCondition>
						<IfMannequinMarker MarkerName="DisableMarker"/>
					</IfCondition>
					<ThenActivity>
						<TriggerEntity>
							<Default TriggerName="MarkerOff"/>
						</TriggerEntity>
					</ThenActivity>
				</IfThenElse>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="true" CompletionFragmentOffset="0.0"/>
				</BehaviorTreeTask>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Alerted" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
				<RunFxScript ResetWhenReinstalled="true" RunOnRemoteClients="true">
					<Default ScriptToRun="Player_Hurts" StopScriptOnExit="false" StopScriptOnDataChange="true" RunScriptOnSlotItem="false"/>
				</RunFxScript>
				<SetAudioSwitchState ResetWhenReinstalled="true" RunOnRemoteClients="true">
					<Default SwitchName="Voice" StateName="Vo_Hurt" SetOnStop="false"/>
				</SetAudioSwitchState>
			</Activities>
		</Action>
		<Action Name="Reaction_Additive" FragmentName="r_R0_F" ServerStarted="true">
			<ActivationCondition>
				<And>
					<IfDamaged RequireDamageWasBlocked="false" RequireDamageDepletedStamina="false" RequireDeflectDamage="false" FailOnNoReactionDamage="true" IgnoreDeflectDamage="true" RequireHitVolumeName=""/>
					<Not>
						<IfDamaged RequireDamageWasBlocked="true" RequireDamageDepletedStamina="true" RequireDeflectDamage="false" FailOnNoReactionDamage="false" IgnoreDeflectDamage="false" RequireHitVolumeName=""/>
					</Not>
					<Or>
						<IfDamagedByPowerLevel Comparison="Equal" Value="0"/>
						<And>
							<IfDamagedByPowerLevel Comparison="GreaterThan" Value="0"/>
							<IfGritValue RequireGritActive="true" ComparisonValue="0" ComparisonValueIsPercentage="false" ComparisonType="GreaterThan"/>
							<Not>
								<IsStunned/>
							</Not>
						</And>
						<IfMannequinTag TagName="Reset"/>
						<IfMannequinTag TagName="Elite"/>
					</Or>
					<Not>
						<IfDead ServerOnly="true"/>
					</Not>
					<Not>
						<IfMannequinMarker MarkerName="DoNotReact"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<Or>
					<IfMannequinMarker MarkerName="HoppingBack"/>
					<IfFragmentDone UseHostActionFragment="true" ExitOffsetSeconds="0.2"/>
				</Or>
			</DeactivationCondition>
			<Activities>
				<SetReactionFragment>
					<Default ReactionTablePath="SharedAssets/springboardentitites/Characters/BaseAI/CAGE/BaseAI_AdditiveReactionTableHarness.actionlist"/>
					<Conditional Name="Elite" ReactionTablePath="SharedAssets/springboardentitites/Characters/Damned/CAGE/DamnedEliteReactionTableHarness.actionlist"/>
				</SetReactionFragment>
				<ReactionMotion>
					<Default Scale="0.0"/>
					<Conditional Name="Boss" Scale="0.0"/>
				</ReactionMotion>
				<ClearDamaged/>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Alerted" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
				<RunFxScript ResetWhenReinstalled="true" RunOnRemoteClients="true">
					<Default ScriptToRun="Wolf_Hurts" StopScriptOnExit="false" StopScriptOnDataChange="true" RunScriptOnSlotItem="false"/>
				</RunFxScript>
				<SetAudioSwitchState ResetWhenReinstalled="true" RunOnRemoteClients="true">
					<Default SwitchName="Voice" StateName="Vo_Hurt" SetOnStop="false"/>
				</SetAudioSwitchState>
			</Activities>
		</Action>
		<Action Name="ActivateGrit" Comment="Activate GRIT as long as the character is not Staggered, and Stagger is not force disabled by MannequinMarker">
			<ActivationCondition>
				<And>
					<Not>
						<IfFragmentPlaying UseHostActionFragment="false" FragmentName="r_Stagger" Comment="Check that we're not already playing the Stagger reaction"/>
					</Not>
					<IfHasStatusEffect StatusEffect="AI_Enable_Stagger" Comment="Add this into your character's initial status effects to enable the Stagger mechanic on them"/>
					<Not>
						<IfMannequinMarker MarkerName="DisableStagger" Comment="Use this to disable Stagger during specific fragments, such as key boss abilities that you don't want interrupted"/>
					</Not>
					<Not>
						<IfDead ServerOnly="true"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<Or>
					<IfFragmentPlaying UseHostActionFragment="false" FragmentName="r_Stagger" Comment="Deactivate GRIT when the character is Staggered, so they do not continue to take stamina damage while in the state"/>
					<IfMannequinMarker MarkerName="DisableStagger" Comment="Use this to disable Stagger during specific fragments, such as key boss abilities that you don't want interrupted"/>
				</Or>
			</DeactivationCondition>
			<Activities>
				<ActivateGrit Comment="This allows the character to always take Stamina damage">
					<Default OnEnter="Activate" OnExit="Deactivate" DamageTableRow=""/>
				</ActivateGrit>
			</Activities>
		</Action>
		<Action Name="Reaction_Staggered" FragmentName="r_Stagger" ServerStarted="true">
			<ActivationCondition>
				<And>
					<IfStaminaValue ComparisonValue="0.0" ComparisonValueIsPercentage="false" ComparisonType="LessThanOrEqual" Comment="Look for Stamina to be 0"/>
					<IfHasStatusEffect StatusEffect="AI_Yonas_Stamina_Debuff"/>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<Or>
					<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.0"/>
					<IfHasStatusEffect StatusEffect="AI_Yonas_Phase2"/>
				</Or>
			</DeactivationCondition>
			<Activities>
				<ModifyStatusEffects>
					<Default Comment="Reduces received Stagger damage for a period after being Staggered">
						<EffectsToApplyOnEnter>
							<EffectId EffectId="AI_Staggered_Tracker"/>
							<EffectId EffectId="AI_Yonas_StaggerPhase"/>
						</EffectsToApplyOnEnter>
						<EffectsToRemoveOnEnter>
							<EffectId EffectId="AI_Yonas_Phase1_Berserk"/>
						</EffectsToRemoveOnEnter>
						<EffectsToRemoveOnExit>
							<EffectId EffectId="AI_Staggered_Tracker"/>
						</EffectsToRemoveOnExit>
					</Default>
				</ModifyStatusEffects>
				<CastSpell>
					<Default SpellName="AI_Staggered_Telegraph"/>
				</CastSpell>
				<SetReactionFragment Comment="Just like our Spawn actions, use SetReactionFragment referencing the EmptyReactionTableHarness table to prevent behavior evaluations while in this action">
					<Default ReactionTablePath="SharedAssets/SpringboardEntitites/Characters/BaseAI/CAGE/EmptyReactionTableHarness.actionlist" IsFullBody="true" UnsetReactionOffset="0.2"/>
				</SetReactionFragment>
				<TriggerEntity>
					<Default TriggerName="HideMarker"/>
				</TriggerEntity>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Empowered" OnEnter="Unset" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
				<SetMannequinTag ResetWhenReinstalled="false">
					<Default TagName="Reaction" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
				<IfThenElse ResetWhenReinstalled="false" Comment="">
					<IfCondition>
						<IfMannequinMarker MarkerName="Swap_Back"/>
					</IfCondition>
					<ThenActivity>
						<Group>
							<SheatheWeapon ResetWhenReinstalled="false">
								<Default SheatheOption="Sheathe" SlotToSheathe="ACTIVE_MAIN_HAND_WEAPON" OnEnter="Set" OnExit="NoEffect"/>
							</SheatheWeapon>
							<SetMannequinTagFromSource ResetWhenReinstalled="false">
								<Default TagSource="PaperdollSlot" SourceSlot="ACTIVE_MAIN_HAND_WEAPON" OnEnter="Unset" OnExit="NoEffect"/>
							</SetMannequinTagFromSource>
							<SetActiveWeapon ResetWhenReinstalled="false">
								<Default WeaponOption="main-hand-option-1" OnEnter="Set" OnExit="NoEffect"/>
							</SetActiveWeapon>
							<SheatheWeapon ResetWhenReinstalled="false">
								<Default SheatheOption="UnSheathe" SlotToSheathe="ACTIVE_MAIN_HAND_WEAPON" OnEnter="Set" OnExit="NoEffect"/>
							</SheatheWeapon>
							<SetMannequinTagFromSource ResetWhenReinstalled="false">
								<Default TagSource="PaperdollSlot" SourceSlot="ACTIVE_MAIN_HAND_WEAPON" OnEnter="Set" OnExit="NoEffect"/>
							</SetMannequinTagFromSource>
						</Group>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="false" Comment="">
					<IfCondition>
						<And>
							<BlackboardCondition LeftOperand="%Boss_Phase%0" Operator="Equal" RightOperand="0"/>
							<IfMannequinMarker MarkerName="Phase1"/>
							<Not>
								<IfHasStatusEffect StatusEffect="AI_Yonas_Phase2"/>
							</Not>
						</And>
					</IfCondition>
					<ThenActivity>
						<Group>
							<ModifyStatusEffects>
								<Default>
									<EffectsToApplyOnEnter>
										<EffectId EffectId="AI_Yonas_HealthReset"/>
									</EffectsToApplyOnEnter>
									<EffectsToRemoveOnExit>
										<EffectId EffectId="AI_Yonas_StaggerPhase"/>
									</EffectsToRemoveOnExit>
								</Default>
							</ModifyStatusEffects>
							<TriggerEntity>
								<Default TriggerName="ShowMarker"/>
							</TriggerEntity>
							<SetMannequinTag ResetWhenReinstalled="true">
								<Default TagName="Empowered" OnEnter="NoEffect" OnExit="Set" DelayTimer="0.0"/>
							</SetMannequinTag>
							<SetMannequinTag ResetWhenReinstalled="true">
								<Default TagName="Elite" OnEnter="NoEffect" OnExit="Set" DelayTimer="0.0"/>
							</SetMannequinTag>
							<ModifyStatusEffects>
								<Default>
									<EffectsToApplyOnEnter>
										<EffectId EffectId="AI_Yonas_Phase1_Berserk"/>
									</EffectsToApplyOnEnter>
								</Default>
							</ModifyStatusEffects>
						</Group>
					</ThenActivity>
				</IfThenElse>
				<IfThenElse ResetWhenReinstalled="false" Comment="">
					<IfCondition>
						<And>
							<BlackboardCondition LeftOperand="%Boss_Phase%0" Operator="Equal" RightOperand="1"/>
							<IfMannequinMarker MarkerName="Phase2"/>
							<Not>
								<IfHasStatusEffect StatusEffect="AI_Yonas_Phase2"/>
							</Not>
						</And>
					</IfCondition>
					<ThenActivity>
						<Group>
							<SetMannequinTag ResetWhenReinstalled="true">
								<Default TagName="Elite" OnEnter="NoEffect" OnExit="Set" DelayTimer="0.0"/>
							</SetMannequinTag>
							<ModifyStatusEffects>
								<Default>
									<EffectsToApplyOnEnter>
										<EffectId EffectId="AI_Yonas_HealthReset"/>
									</EffectsToApplyOnEnter>
									<EffectsToRemoveOnExit>
										<EffectId EffectId="AI_Yonas_StaggerPhase"/>
									</EffectsToRemoveOnExit>
								</Default>
							</ModifyStatusEffects>
							<TriggerEntity>
								<Default TriggerName="ShowMarker"/>
							</TriggerEntity>
						</Group>
					</ThenActivity>
				</IfThenElse>
			</Activities>
		</Action>
	</Actions>
	<Conditions>
		<And Name="R2_StunBreakout">
			<IsStunned/>
			<IfDamagedByPowerLevel Comparison="LessThanOrEqual" Value="2" FailOnNoReactionDamage="false" QueryData="true"/>
		</And>
		<And Name="R4_StunBreakout">
			<IsStunned/>
			<Or>
				<IfDamagedByPowerLevel Comparison="Equal" Value="4" FailOnNoReactionDamage="false" QueryData="true"/>
				<IfDamagedByPowerLevel Comparison="Equal" Value="5" FailOnNoReactionDamage="false" QueryData="true"/>
			</Or>
		</And>
		<And Name="StunBreakout">
			<IsStunned/>
			<IfDamagedByPowerLevel Comparison="GreaterThan" Value="2" FailOnNoReactionDamage="false" QueryData="true"/>
		</And>
		<And Name="R2_ReactionBreakout">
			<IfCanBreakReaction StunToBreakout="2" QueryData="true"/>
			<IfDamagedByPowerLevel Comparison="LessThanOrEqual" Value="2" FailOnNoReactionDamage="false" QueryData="true"/>
		</And>
		<And Name="R4_ReactionBreakout">
			<IfCanBreakReaction Name="ReactionBreakout" StunToBreakout="2"/>
			<Or>
				<IfDamagedByPowerLevel Comparison="Equal" Value="4" FailOnNoReactionDamage="false" QueryData="true"/>
				<IfDamagedByPowerLevel Comparison="Equal" Value="5" FailOnNoReactionDamage="false" QueryData="true"/>
			</Or>
		</And>
		<And Name="ReactionBreakout">
			<IfCanBreakReaction StunToBreakout="2"/>
			<IfDamagedByPowerLevel Comparison="GreaterThan" Value="2" FailOnNoReactionDamage="false" QueryData="true"/>
		</And>
		<Or Name="damaged_front">
			<IfDamagedByAngle Max="90.000000" Min="0.000000" Tolerance="0.010000"/>
			<IfDamagedByAngle Max="0.000000" Min="-90.000000" Tolerance="0.010000"/>
		</Or>
		<Or Name="damaged_back">
			<IfDamagedByAngle Max="180.000000" Min="90.000000" Tolerance="0.010000"/>
			<IfDamagedByAngle Max="-90.000000" Min="-180.000000" Tolerance="0.010000"/>
		</Or>
		<IfMannequinTag Name="Elite" TagName="Elite"/>
		<IfMannequinTag Name="Boss" TagName="Boss"/>
		<IfMannequinTag Name="Reset" TagName="Reset"/>
		<IfHasStatusEffect Name="PromotedElite" StatusEffect="AI_Elite_Unbreakable_Grit_Buff"/>
	</Conditions>
</ActionList>

