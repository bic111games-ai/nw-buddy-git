<ActionList>
	<Actions>
		<Action Name="Reaction" FragmentName="r_R2_F" ServerStarted="true">
			<ActivationCondition>
				<And>
					<IfDamaged RequireDamageWasBlocked="false" RequireDamageDepletedStamina="false" RequireDeflectDamage="false" FailOnNoReactionDamage="true" IgnoreDeflectDamage="true" RequireHitVolumeName="" RequireRanged="false"/>
					<Or>
						<And>
							<IfHealthPercentage Comparison="LessThanOrEqual" Percentage="0.8"/>
							<IfMannequinTag TagName="Phase_1"/>
						</And>
						<And>
							<IfHealthPercentage Comparison="LessThanOrEqual" Percentage="0.6"/>
							<IfMannequinTag TagName="Phase_2"/>
						</And>
					</Or>
					<Not>
						<IfMannequinTag TagName="Reset"/>
					</Not>
					<Not>
						<IfDead ServerOnly="true"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" ExitOffsetSeconds="0.1"/>
			</DeactivationCondition>
			<Activities>
				<SetReactionFragment>
					<Default ReactionTablePath="SharedAssets/SpringboardEntitites/Characters/BaseAI/CAGE/EmptyReactionTableHarness.actionlist" IsFullBody="true" UnsetReactionOffset="0.3"/>
				</SetReactionFragment>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="1.00" Decel="20.0,20.0,20.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
				<ClearDamaged/>
				<SetMannequinTag ResetWhenReinstalled="false">
					<Default TagName="Reaction" OnEnter="Set" OnExit="Unset" DelayTimer="0.0"/>
				</SetMannequinTag>
				<ModifyStatusEffects ResetWhenReinstalled="true">
					<Conditional Name="CurrentlyPhase1" Comment="Transitioning Out Of Phase 1">
						<EffectsToRemoveOnEnter>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_Ability"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_F"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_F_Tick"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_R"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_R_Tick"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_B"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_B_Tick"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_L"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_L_Tick"/>
						</EffectsToRemoveOnEnter>
						<EffectsToApplyOnEnter>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Transition01"/>
						</EffectsToApplyOnEnter>
					</Conditional>
					<Conditional Name="CurrentlyPhase2" Comment="Transitioning Out Of Phase 2">
						<EffectsToRemoveOnEnter>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_Ability"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_F"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_F_Tick"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_R"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_R_Tick"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_B"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_B_Tick"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_L"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_L_Tick"/>
						</EffectsToRemoveOnEnter>
						<EffectsToApplyOnEnter>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Transition02"/>
						</EffectsToApplyOnEnter>
					</Conditional>
				</ModifyStatusEffects>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Phase3" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
					<Conditional Name="CurrentlyPhase1" TagName="Phase_2" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
					<Conditional Name="CurrentlyPhase2" TagName="Phase_3" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
				<AIAssignOrder>
					<Default Order="Despawn"/>
				</AIAssignOrder>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Alerted" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
				<SetAudioSwitchState ResetWhenReinstalled="true" RunOnRemoteClients="true">
					<Default SwitchName="Voice" StateName="Vo_Hurt" SetOnStop="false"/>
				</SetAudioSwitchState>
			</Activities>
		</Action>
		<Action Name="Reaction_Staggered" FragmentName="r_Stagger" ServerStarted="true">
			<ActivationCondition>
				<And>
					<IfStaminaValue ComparisonValue="0.0" ComparisonValueIsPercentage="false" ComparisonType="LessThanOrEqual" Comment="Look for Stamina to be 0"/>
					<Or>
						<IfDamagedByPowerLevel Comparison="GreaterThanOrEqual" Value="0" FailOnNoReactionDamage="false" Comment="Require the character to be hit by an attack to enter Stagger"/>
						<IfHasStatusEffect StatusEffect="AI_Force_Stagger" Comment="Do not require the character to be hit by an attack to enter Stagger"/>
					</Or>
					<Not Comment="Check that the character isn't already stunned or staggered. Staggered also applies the 'Stunned' tag.">
						<Or>
							<IsStunned/>
							<IfMannequinTag TagName="Stunned"/>
						</Or>
					</Not>
					<IfHasStatusEffect StatusEffect="AI_Enable_Stagger" Comment="Add this into your character's initial status effects to enable the Stagger mechanic on them"/>
					<Not>
						<IfMannequinMarker MarkerName="DisableStagger" Comment="Use this to disable Stagger during specific fragments, such as key boss abilities that you don't want interrupted"/>
					</Not>
					<Not>
						<IfDead ServerOnly="true"/>
					</Not>
				</And>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.1"/>
			</DeactivationCondition>
			<Activities>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Stunned" OnEnter="Set" OnExit="Unset" DelayTimer="0.0"/>
				</SetMannequinTag>
				<ModifyStatusEffects>
					<Default Comment="Reduces received Stagger damage for a period after being Staggered">
						<EffectsToRemoveOnEnter>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_Ability"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_F"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_F_Tick"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_R"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_R_Tick"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_B"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_B_Tick"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_L"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_L_Tick"/>
						</EffectsToRemoveOnEnter>
						<EffectsToApplyOnEnter>
							<EffectId EffectId="AI_Staggered_Tracker"/>
						</EffectsToApplyOnEnter>
						<EffectsToRemoveOnExit>
							<EffectId EffectId="AI_Staggered_Tracker"/>
						</EffectsToRemoveOnExit>
					</Default>
					<Conditional Name="TelegraphStaggered" Comment="Applies a status effect to the character that displays 'Staggered' while in this action, and reduces received Stagger damage for a period after being Staggered">
						<EffectsToRemoveOnEnter>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_Ability"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_F"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_F_Tick"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_R"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_R_Tick"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_B"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_B_Tick"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_L"/>
							<EffectId EffectId="AI_Evil_Knight_Fire_Champion_Spin_L_Tick"/>
						</EffectsToRemoveOnEnter>
						<EffectsToApplyOnEnter>
							<EffectId EffectId="AI_Staggered_Telegraph"/>
							<EffectId EffectId="AI_Staggered_Tracker"/>
						</EffectsToApplyOnEnter>
						<EffectsToRemoveOnExit>
							<EffectId EffectId="AI_Staggered_Telegraph"/>
							<EffectId EffectId="AI_Staggered_Tracker"/>
						</EffectsToRemoveOnExit>
					</Conditional>
				</ModifyStatusEffects>
				<CastSpell>
					<Default SpellName="AI_Staggered_Telegraph"/>
				</CastSpell>
				<ResetStamina ResetWhenReinstalled="false" IgnoreDataChanges="false">
					<Default OnEnter="NoEffect" OnExit="Reset" Comment="Reset stamina at the end of the action"/>
				</ResetStamina>
				<ChangeActionFragment ResetWhenReinstalled="true">
					<Default UseDefaultFragment="true" FragmentName=""/>
					<Conditional Name="damaged_front" UseDefaultFragment="false" FragmentName="r_Stagger_F"/>
					<Conditional Name="damaged_back" UseDefaultFragment="false" FragmentName="r_Stagger_B"/>
				</ChangeActionFragment>
				<SetReactionFragment Comment="Just like our Spawn actions, use SetReactionFragment referencing the EmptyReactionTableHarness table to prevent behavior evaluations while in this action">
					<Default ReactionTablePath="SharedAssets/SpringboardEntitites/Characters/BaseAI/CAGE/EmptyReactionTableHarness.actionlist" IsFullBody="true" UnsetReactionOffset="0.2"/>
				</SetReactionFragment>
			</Activities>
		</Action>
	</Actions>
	<Conditions>
		<IfCanBreakReaction Name="ReactionBreakout" StunToBreakout="2"/>
		<IfMannequinTag Name="CurrentlyPhase1" TagName="Phase_1"/>
		<IfMannequinTag Name="CurrentlyPhase2" TagName="Phase_2"/>
		<IfMannequinMarker Name="TelegraphStaggered" MarkerName="EnableStaggerInNameplate" Comment="Use this MarkerName in a CAGE-Named proc clip to display 'Staggered' text in your character's nameplate while they are Staggered"/>
		<Or Name="damaged_front">
			<IfDamagedByAngle Max="90.000000" Min="0.000000" Tolerance="0.010000"/>
			<IfDamagedByAngle Max="0.000000" Min="-90.000000" Tolerance="0.010000"/>
		</Or>
		<Or Name="damaged_back">
			<IfDamagedByAngle Max="180.000000" Min="90.000000" Tolerance="0.010000"/>
			<IfDamagedByAngle Max="-90.000000" Min="-180.000000" Tolerance="0.010000"/>
		</Or>
	</Conditions>
</ActionList>

