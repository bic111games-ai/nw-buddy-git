<ActionList>
	<Actions>
		<Action Name="Attack_Icey_Toss" FragmentName="Attack_Icey_Toss" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Attack_Icey_Toss_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
				</BehaviorTreeTask>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="0.00" Decel="20.0,20.0,20.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<And>
							<IfMannequinMarker MarkerName="FollowUpTransition"/>
							<IfHasStatusEffect StatusEffect="AI_Ice_Knight_IceyPull_AttackSuccess" OnlyCheckOwnedStatusEffects="false"/>
						</And>
					</IfCondition>
					<ThenActivity>
						<ChangeActionFragment ResetWhenReinstalled="true">
							<Default UseDefaultFragment="false" FragmentName="Attack_Execution"/>
						</ChangeActionFragment>
					</ThenActivity>
				</IfThenElse>
			</Activities>
		</Action>
		<Action Name="Attack_Whirlwind_Intro" FragmentName="Attack_Whirlwind_Intro" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Attack_Whirlwind_Intro_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="0.00" Decel="20.0,20.0,20.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
			</Activities>
		</Action>
		<Action Name="Attack_Whirlwind_Combo" FragmentName="Attack_Whirlwind" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Attack_Whirlwind_Combo_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
				<IfThenElse ResetWhenReinstalled="true" Comment="">
					<IfCondition>
						<And>
							<IfMannequinMarker MarkerName="FollowUpTransition"/>
							<IfHasStatusEffect StatusEffect="AI_Ice_Knight_WhirlCombo_AttackSuccess" OnlyCheckOwnedStatusEffects="false"/>
						</And>
					</IfCondition>
					<ThenActivity>
						<ChangeActionFragment ResetWhenReinstalled="true">
							<Default UseDefaultFragment="false" FragmentName="Attack_Execution"/>
						</ChangeActionFragment>
					</ThenActivity>
				</IfThenElse>
			</Activities>
		</Action>
		<Action Name="Attack_Whirlwind" FragmentName="Attack_Whirlwind" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Attack_Whirlwind_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
			</Activities>
		</Action>
		<Action Name="Attack_Whirlwind_Outro" FragmentName="Attack_Whirlwind_Outro" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Attack_Whirlwind_Outro_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="0.00" Decel="20.0,20.0,20.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
			</Activities>
		</Action>
		<Action Name="Attack_Execution" FragmentName="Attack_Execution" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Attack_Execution_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="0.00" Decel="20.0,20.0,20.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
			</Activities>
		</Action>
		<Action Name="DeathsDoor_Execution" FragmentName="DeathsDoor_Execution" Predictive="true">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="DeathsDoor_Execution_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.4"/>
				</BehaviorTreeTask>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="0.00" Decel="20.0,20.0,20.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
			</Activities>
		</Action>
	</Actions>
	<Conditions>
		<IfMannequinMarker Name="APPLYROTATION" MarkerName="ApplyRotation"/>
		<IfMannequinMarker Name="FaceTarget" MarkerName="FaceTarget"/>
		<IfMannequinMarker Name="Translation3x" MarkerName="Translation3x"/>
		<IfMannequinTag Name="ChainAttack" TagName="ChainAttack"/>
		<IfMannequinTag Name="StopChainAttack" TagName="StopChainAttack"/>
		<IfMannequinMarker Name="StopFacingTarget" MarkerName="StopFacingTarget"/>
		<IfMannequinMarker Name="AimPose" MarkerName="AimPose"/>
	</Conditions>
</ActionList>

