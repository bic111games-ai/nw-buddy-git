<ActionList>
	<Actions>
		<Action Name="Fidget" FragmentName="Fidget">
			<ActivationCondition>
				<IfHTNCAGEAction ActionName="Fidget_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<Or>
					<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.1"/>
					<Not>
						<IfHTNCAGEAction ActionName="Fidget_CAGE_Task"/>
					</Not>
				</Or>
			</DeactivationCondition>
			<Activities>
				<HTNPlanDoneActivity>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.3"/>
				</HTNPlanDoneActivity>
			</Activities>
		</Action>
		<Action Name="Ambient_Action_01" FragmentName="Ambient_Action_01">
			<ActivationCondition>
				<IfHTNCAGEAction ActionName="Ambient_Action_01_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<Or>
					<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.1"/>
					<Not>
						<IfHTNCAGEAction ActionName="Ambient_Action_01_CAGE_Task"/>
					</Not>
				</Or>
			</DeactivationCondition>
			<Activities>
				<HTNPlanDoneActivity>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.3"/>
				</HTNPlanDoneActivity>
			</Activities>
		</Action>
		<Action Name="Alert" FragmentName="Alert">
			<ActivationCondition>
				<IfHTNCAGEAction ActionName="Alert_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.1"/>
			</DeactivationCondition>
			<Activities>
				<HTNPlanDoneActivity>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.3"/>
				</HTNPlanDoneActivity>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Alerted" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.0"/>
				</SetMannequinTag>
				<AnimationDrivenMotion>
					<Default MotionMultiplier="1.00" RotationMultiplier="1.00" Decel="0.0,0.0,0.0" DisableGravity="false" InheritVelocity="false"/>
				</AnimationDrivenMotion>
			</Activities>
		</Action>
		<Action Name="Alert_Lay" FragmentName="Alert_Lay">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Alert_Lay_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Alerted" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.10"/>
				</SetMannequinTag>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
				</BehaviorTreeTask>
			</Activities>
		</Action>
		<Action Name="Alert_Wallow" FragmentName="Alert_Wallow">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Alert_Wallow_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Alerted" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.10"/>
				</SetMannequinTag>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
				</BehaviorTreeTask>
			</Activities>
		</Action>
		<Action Name="Alert_Grooming" FragmentName="Alert_Grooming">
			<ActivationCondition>
				<IfBehaviorTreeTask ActionName="Alert_Grooming_CAGE_Task"/>
			</ActivationCondition>
			<DeactivationCondition>
				<IfFragmentDone UseHostActionFragment="true" FragmentName="" ExitOffsetSeconds="0.2"/>
			</DeactivationCondition>
			<Activities>
				<SetMannequinTag ResetWhenReinstalled="true">
					<Default TagName="Alerted" OnEnter="Set" OnExit="NoEffect" DelayTimer="0.10"/>
				</SetMannequinTag>
				<BehaviorTreeTask>
					<Default InvalidatePlanOnExit="false" InvalidatePlanOnReinstall="false" CompletionFragmentOffset="0.2"/>
				</BehaviorTreeTask>
			</Activities>
		</Action>
	</Actions>
	<Conditions>
		<IfMannequinMarker Name="AllowRotation" MarkerName="AllowRotation"/>
	</Conditions>
</ActionList>

